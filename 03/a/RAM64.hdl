// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:

    DMux8Way (in=load, sel=address[3..5], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);

    RAM8 (in=in, load=a, address=address[0..2], out=aa);
    RAM8 (in=in, load=b, address=address[0..2], out=bb);
    RAM8 (in=in, load=c, address=address[0..2], out=cc);
    RAM8 (in=in, load=d, address=address[0..2], out=dd);
    RAM8 (in=in, load=e, address=address[0..2], out=ee);
    RAM8 (in=in, load=f, address=address[0..2], out=ff);
    RAM8 (in=in, load=g, address=address[0..2], out=gg);
    RAM8 (in=in, load=h, address=address[0..2], out=hh);

    Mux8Way16(a=aa, b=bb, c=cc, d=dd, e=ee, f=ff, g=gg, h=hh, sel=address[3..5], out=out);
}